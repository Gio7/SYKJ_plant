// Copyright 2022, the Chromium project authors.  Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart' show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for windows - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return iosPro;
      case TargetPlatform.macOS:
        return iosPro;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyAgX-CPjGk7BvYy51hlnZomWMIekbrUB0U',
    appId: '1:300865795740:android:179281265d5142334b5f59',
    messagingSenderId: '300865795740',
    projectId: 'plant-identifier-scanner',
    databaseURL: 'https://flutterfire-e2e-tests-default-rtdb.europe-west1.firebasedatabase.app',
    storageBucket: 'plant-identifier-scanner.appspot.com',
  );

  static const FirebaseOptions iosPro = FirebaseOptions(
    apiKey: 'AIzaSyAhFkMn6MYMvNOBDIWuLB2VaKqu4BdDfjQ',
    appId: '1:225439231868:ios:68d1bba0d4c56a5fc2bef9',
    messagingSenderId: '225439231868',
    projectId: 'plant-identifier-for-ios',
    databaseURL: 'https://flutterfire-e2e-tests-default-rtdb.europe-west1.firebasedatabase.app',
    storageBucket: 'plant-identifier-for-ios.appspot.com',
    androidClientId: 'com.plant.identifier.diagnosis.scanner.app',
    iosClientId: 'com.plant.identifier.diagnosis.scanner.app',
    iosBundleId: 'com.plant.identifier.diagnosis.scanner.app',
  );
}
